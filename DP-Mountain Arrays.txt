Description

Vivek wrote down a sequence containing distinct positive integers. Shubham wanted to reorder the elements to get a "mountain sequence". A sequence a0, a1, ..., an-1 is called a mountain sequence if there exists an index j, where 0 < j < n-1, such that the sequence a0, a1, ..., aj is strictly increasing, and the sequence aj, aj+1, ..., an-1 is strictly decreasing. A sequence is strictly increasing if each element is strictly greater than the element before it, and a sequence is strictly decreasing if each element is strictly less than the element before it.

Shubham also wanted the resulting sequence to satisfy one additional rule. The absolute difference between each pair of adjacent elements must be less than or equal to K.

Find the number of valid sequence modulo 10^9+7.

Input Format

The first line contains an integer T - number of test cases. ( 1 ≤ T ≤ 50).

The first line of each test case contains two space-separated integers N, K, (1≤ N ≤ 1000, 1 ≤ K ≤ 1000000000).

The second line contains N- space-separated distinct integers (1 ≤ Ai ≤ 1000000000).

Output Format

For each test case print the number of valid sequence mod 10^9+7 in a newline.
Sample Input 1

2
4 6
10 4 1 5
9 44
96 29 21 90 46 77 31 63 79

Sample Output 1

4
126
































sol:

#include <bits/stdc++.h>
using namespace std;

#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define test int T; cin >> T; while (T--)
#define ll long long int
#define ld long double
#define endl "\n"
#define sss " "
#define mod 1000000007

bool cmp(int a, int b){
	return a > b;
}

int N,K;
int dp[1005][1005];
int arr[1005];

int rec(int l, int r){
	int idx = max(l,r) + 1;

	if(idx == N ){
        if(l == 0 || r == 0){
            return 0;
        }
		return 1;
	}

	if(dp[l][r] != -1) return dp[l][r];
	
	int ans = 0;
	if(abs(arr[r] - arr[idx]) <= K) ans = (ans + rec(l,idx)%mod)%mod;
	if(abs(arr[l] - arr[idx]) <= K) ans = (ans + rec(idx,r)%mod)%mod;
	return dp[l][r] = ans;
}


void solve(){
	cin >> N >> K;
	memset(dp,-1,sizeof(dp));
	for(int i = 0; i < N; i++) cin >> arr[i];
	sort(arr,arr+N,cmp);
	cout << (rec(0,0))%mod << endl;	
}

int main(){
	#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	#endif
	IOS

	test
		solve();
	return 0;
}
