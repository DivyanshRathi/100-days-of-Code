Description

You are given a string S of length N. You have to find the minimum number of characters you should change in S so that there will be a substring of length K in S that is also a substring of the infinite string "RGBRGBRGB ...".

Input Format

The first line of the input contains one integer T - the number of test cases. Then T test cases follow.

The first line of each test case contains two space-separated integers N, K.

The second line of each test case contains one string S.

Sum of N across all test cases ≤10^6.

Output Format

For each test case, print the minimum number of characters you should change in S so that there will be a substring of length K in S that is also a substring of the infinite string "RGBRGBRGB ...".

Constraints

1≤ T ≤ 100

1 ≤ K≤ N ≤ 2*10^5

Sum of N across all test cases ≤10^6.
Sample Input 1

3
4 1
BRRG
4 4
BBBG
2 2
GR

Sample Output 1

0
2
1

Note

For the first test case, any substring of length 1 is also a substring of "RGBRGBRGB …”

For the second test case, change the given string BBBG to GBRG, you change 2 characters.

For the second test case, change the given string GR to GB, you change 1 character.
















































sol:

#include <bits/stdc++.h>
using namespace std;

#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define test int T; cin >> T; while (T--)
#define ll long long int
#define ld long double
#define endl "\n"
#define sss " "
#define mod 1000000007

string S,s[3];
int N,K;

void solve(){
	cin >> N >> K;
	cin >> S;
	s[0].resize(N);
	s[1].resize(N);
	s[2].resize(N);

	for(int i = 0; i < N; i++){
		if(i%3 == 0){
			s[0][i] = 'R';
		}
		else if(i%3 == 1){
			s[0][i] = 'G';
		}
		else{
			s[0][i] = 'B';
		}
	}
	for(int i = 0; i < N; i++){
		if(i%3 == 0){
			s[2][i] = 'G';
		}
		else if(i%3 == 1){
			s[2][i] = 'B';
		}
		else{
			s[2][i] = 'R';
		}
	}
	for(int i = 0; i < N; i++){
		if(i%3 == 0){
			s[1][i] = 'B';
		}
		else if(i%3 == 1){
			s[1][i] = 'R';
		}
		else{
			s[1][i] = 'G';
		}
	}
	
	int ans = INT_MAX;

	for(int i = 0; i < 3; i++){
		int arr[N+1];
		arr[0] = 0;
		for(int j = 0; j < N; j++){
			if(S[j] != s[i][j]){
				arr[j+1] = 1;
			}
			else arr[j+1] = 0;
			arr[j+1] += arr[j];
		}

		for(int j = K; j <= N ; j++){
			ans = min(ans,arr[j]-arr[j-K]);
		}
	}
	cout << ans <<endl;
	
}

int main(){
	#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	#endif
	IOS

	test
		solve();
	return 0;
}
